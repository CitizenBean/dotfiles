global !p
import os
from snippet_string_helpers import camelcase, pascalcase, snakecase, uppersnakecase

IGNORED_DIRS = ['app', 'lib']

def write_instance_vars(arglist, snip):
	args = str(arglist).split(',')
	for arg in args:
		name = arg.strip().replace(':', ' ').split(' ', 1)[0]
		if name:
			snip += '  @{} = {}'.format(name, name)
		else:
			snip += ''

def get_modules():
	path = os.path.relpath(path)

endglobal

snippet __pry "binding.pry"
binding.pry if true
endsnippet

snippet __class
class ${1:`!p snip.rv = pascalcase(snip.basename)`}
	$0
end
endsnippet

snippet __testclass
class ${1:`!p snip.rv = pascalcase(snip.basename)`} < ActiveSupport::TestCase
	$0
end
endsnippet

snippet __init "def initialize ..."
def initialize($1)`!p write_instance_vars(t[1],snip)`$0
end
endsnippet

snippet __test
namespace `!p
snip.rv = os.path.relpath(path)
`
endsnippet

snippet #todo
# TODO(on: date('`date +%Y`-${1:`date +%m`}-${2:`date +%d`}'), to: 'dave.rose@shopify.com')
#	${3:description}
endsnippet

snippet __gen_taxjob
# frozen_string_literal: true

class UsaTaxRateImportJobDelta`strftime("%Y%m%d")` < MaintenanceTaskMigration
	mark_as_master_migration!
	self.author_github_username = "drose-shopify"

	def self.up
		file_path = File.join(Rails.root, 'db/avalara/delta_`!v tolower(strftime("%b_%d_%Y"))`.csv').freeze
		push(UsaTaxRateImportJob, delta_file: file_path)
	end
end
endsnippet
