global !p
import os
from snippet_string_helpers import camelcase, pascalcase, snakecase, uppersnakecase

IGNORED_DIRS = ['app', 'lib']

def write_instance_vars(arglist, snip):
	args = str(arglist).split(',')
	for arg in args:
		name = arg.strip().replace(':', ' ').split(' ', 1)[0]
		if name:
			snip += '  @{} = {}'.format(name, name)
		else:
			snip += ''

def get_modules():
	path = os.path.relpath(path)
	
endglobal

snippet __frozen "# frozen string"
# frozen_string_literal: true
# typed: false
endsnippet

snippet __pry "binding.pry"
binding.pry if true
endsnippet

snippet __class
class ${1:`!p snip.rv = pascalcase(snip.basename)`}
	$0
end
endsnippet

snippet __init "def initialize ..."
def initialize($1)`!p write_instance_vars(t[1],snip)`$0
end
endsnippet

snippet __test
namespace `!p
snip.rv = os.path.relpath(path)
`
endsnippet
